name: AMI build

on:
  # Trigger the workflow action on push
  push:
    branches: [main]

  # Allows you to run this workflow mannually 
  workflow_dispatch:

jobs:
  #  Creting jar file and saving it to webservice folder
  jarcreation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Create webservice folder
        run: mkdir webservice

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Creating jar for application
        run: cd servless  && mvn clean && mvn package

      - name: Check jar file created or not
        run: ls -la && cd servless && cd target && ls -la

      - name: Copy jar file to webservice folder
        run: cp servless/target/csye6225lambda-1.jar ./webservice

      - name: switch to webservice folder
        run: cd webservice && ls -la

      - name: Save the webservice folder with jar file to artifact
        uses: actions/upload-artifact@v1
        with:
          name: webservice
          path: ${{ github.workspace }}/webservice

  # Build an AMI 
  amibuild:
    runs-on: ubuntu-latest
    needs: jarcreation

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: webservice
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_KEY_ID: ${{ secrets.AWS_SECRET_KEY_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SERVLESS_BUCKET: ${{ secrets.SERVLESS_BUCKET }}

      - name: Display structure of downloaded files
        run: ls -la

      - name: Configuring AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_ID }}
          aws-region: ${{ secrets.AWS_REGION }}
  
      - name: Upload Zip to S3
        run: |
          aws s3 sync ./webservice s3://${{ env.SERVLESS_BUCKET }}





